version: '3'

networks:
  my_network:
    driver: bridge

services:

    db:
        image: postgres:15.1-alpine
        restart: always
        env_file:
            - .env.docker
        environment:
            - PGDATA=/var/lib/postgresql/data/pgdata/
            - LANG=en_US.utf8
            - LC_ALL=en_US.utf8
        volumes:
            - pg_data:/var/lib/postgresql/data/pgdata/
        ports:
            - "5432:5432"
        healthcheck:
            test: [ 'CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}' ]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - my_network

    app:
        build: .
        tty: true
        env_file:
            - .env.docker
        volumes:
            - .:/app
        command: sh -c "sleep 10 && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
        ports:
            - "8000:8000"
        depends_on:
            db:
                condition: service_healthy
        networks:
            - my_network


volumes:
  pg_data: